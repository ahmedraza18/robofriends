{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACG,sBAAKC,UAAU,sDAAf,UACG,qBACOC,IAAI,SACRC,IAAG,+BAA0BL,EAA1B,cAEN,gCACG,mCAAMC,EAAN,OACA,kCAAKC,EAAL,cCQGI,EAfE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OAAS,oCACDA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAS,cACL,EADK,CAELV,GAAOO,EAAOG,GAAGV,GACjBC,KAASM,EAAOG,GAAGT,KACnBC,MAAUK,EAAOG,GAAGR,OAHPQ,MAHpB,QCUEC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACG,qBAAKV,UAAU,MAAf,SACG,uBACGA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCPI,EARA,SAACC,GACb,OACG,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACIJ,EAAMK,YCkBDC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACtBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAIzB,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKX,MAAMK,a,GAhBCQ,aCgDZC,G,wDA1CX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAd1C,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJP,E,gEASO,IAAD,OAChByB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,+BAOrC,IAAD,EAC2BZ,KAAKJ,MAA7BlB,EADH,EACGA,OAAQK,EADX,EACWA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAQtC,EAAOwC,OAET,sBAAK5C,UAAY,KAAjB,UACE,oBAAIA,UAAY,KAAhB,2BADF,KAC4C,cAC1C,EAD0C,CAChCU,aAAiBgB,KAAKI,iBAFlC,KAGM,cAAC,EAAD,UACJ,cAAC,EAAD,UACA,cACA,EADA,CACS1B,OAAWmC,WAPxB,+C,GA1BMX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.c8fc9c15.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n   return (\r\n      <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5' >\r\n         <\r\n            img alt='robots'\r\n            src={`https://robohash.org/${id}?200x200`}\r\n         />\r\n         <div >\r\n            <h2> {name} </h2>\r\n            <p> {email} </p>\r\n         </div> \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    return ( <div> {\r\n            robots.map((user, i) => {\r\n                return ( <\r\n                    Card key = { i }\r\n                    id = { robots[i].id }\r\n                    name = { robots[i].name }\r\n                    email = { robots[i].email }\r\n                    />\r\n                );\r\n            })\r\n        } </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n   return (\r\n      <div className='pa2'>\r\n         <input\r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search'\r\n            placeholder='search robots'\r\n            onChange={searchChange}\r\n         />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n   return (\r\n      <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px' }}>\r\n         {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n       this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1> Oooops.That is not good </h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n            <h1> Loading </h1> : \r\n            ( <div className = 'tc' >\r\n                <h1 className = 'f1' > RoboFriends </h1>  <\r\n                SearchBox searchChange = { this.onSearchChange }\r\n                />  <Scroll>\r\n                <ErrorBoundry>\r\n                <\r\n                CardList robots = { filteredRobots }\r\n                />  \r\n                </ErrorBoundry>\r\n                </Scroll>  \r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './containers/App';\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n// import { robots } from \"./robots\";\n\nReactDOM.render(\n    <React.StrictMode >\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}